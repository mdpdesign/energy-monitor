version: '3.7'

services:
  proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: proxy-manager
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data/proxy-manager/data:/data
      - ./data/proxy-manager/letsencrypt:/etc/letsencrypt
    labels:
      org.label-schema.group: "proxy"

  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    user: "1000:1000"
    volumes:
      - ./data/prometheus:/prometheus
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 9090:9090
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:9.4.3
    container_name: grafana
    user: "1000:1000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000
    labels:
      org.label-schema.group: "monitoring"
      
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  nodeexporter:
    image: prom/node-exporter:v1.5.0
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    network_mode: host
    ports:
      - 9100:9100
    labels:
      org.label-schema.group: "monitoring"

  tapoexporter:
    image: povilasid/p110-exporter
    container_name: p110-exporter
    volumes:
      - ./tapo/tapo.yml:/app/tapo.yaml:ro
    ports:
      - 9333:9333
    environment:
      - TAPO_EMAIL=${TAPO_EMAIL}
      - TAPO_PASSWORD=${TAPO_PASSWORD}
      - PORT=9333 # optional
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

